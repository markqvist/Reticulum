name: Build Reticulum

env:
  REGISTRY_IMAGE: ${{ github.repository_owner }}/reticulum

on:
  push:
    branches:
      - '*'
    tags:
      - "[0-9]+.[0-9]+.[0-9]+*"
  pull_request:
    branches:
      - master
    paths-ignore:
      - .gitignore
      - LICENSE

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: make test

  package:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment: ${{ contains(github.ref, '-') && 'development' || 'production' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x
      - run: |
          python -m pip install -q build wheel setuptools
          make remove_symlinks
          make build_wheel
          make build_pure_wheel
          make create_symlinks
      - uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist/*.whl

  # documentation:
  #   needs: test
  #   if: startsWith(github.ref, 'refs/tags/')
  #   runs-on: ubuntu-latest
  #   environment: ${{ contains(github.ref, '-') && 'development' || 'production' }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: 3.x
  #     - run: |
  #         sudo apt-get -qq update && sudo apt-get -qq install latexmk texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended
  #         python -m pip -q install sphinx sphinx-copybutton
  #         cd docs && make latexpdf && make epub
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: documentation
  #         path: |
  #           docs/build/latex/*.pdf
  #           docs/build/epub/*.epub

  release:
    needs: [package]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    environment: ${{ contains(github.ref, '-') && 'development' || 'production' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: .artifacts
      - uses: softprops/action-gh-release@v2
        with:
          files: |
#            .artifacts/package/**.whl
#            .artifacts/documentation/latex/reticulumnetworkstack.pdf
#            .artifacts/documentation/epub/ReticulumNetworkStack.epub
          draft: true
          generate_release_notes: true
          prerelease: ${{ contains(github.ref, '-') }}
          fail_on_unmatched_files: true

  build-containers-release:
    needs: release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v6
          - linux/386
          - linux/ppc64le
          - linux/riscv64
          - linux/s390x
    environment: ${{ contains(github.ref, '-') && 'development' || 'production' }}
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: lbatalha/reticulum:${{ github.ref_name }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: .artifacts
      # - name: Build and push
      #   uses: docker/build-push-action@v6
      #   with:
      #     file: docker/Dockerfile.dist
      #     platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6, linux/386, linux/ppc64le
      #     push: true
      #     tags: ${{ github.repository_owner }}/reticulum:${{ github.ref_name }}
      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          file: docker/Dockerfile.dist
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ env.REGISTRY_IMAGE }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  container-manifest-merge:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - build-containers-release
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/digests
          pattern: digests-*
          merge-multiple: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
